"use strict";(self.webpackChunkstencil=self.webpackChunkstencil||[]).push([[930],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),g=c(n),m=o,f=g["".concat(l,".").concat(m)]||g[m]||u[m]||i;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=g;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},2379:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return u}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),s=["components"],a={},l="Go",c={unversionedId:"clients/go",id:"clients/go",title:"Go",description:"Go Reference",source:"@site/docs/clients/go.md",sourceDirName:"clients",slug:"/clients/go",permalink:"/stencil/docs/clients/go",editUrl:"https://github.com/goto/stencil/edit/master/docs/docs/clients/go.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Overview",permalink:"/stencil/docs/clients/overview"},next:{title:"Java",permalink:"/stencil/docs/clients/java"}},p={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Creating a client",id:"creating-a-client",level:3},{value:"Get Descriptor",id:"get-descriptor",level:3},{value:"Parse protobuf message.",id:"parse-protobuf-message",level:3},{value:"Serialize data.",id:"serialize-data",level:3},{value:"Enable auto refresh of schemas",id:"enable-auto-refresh-of-schemas",level:3},{value:"Using VersionBasedRefresh strategy",id:"using-versionbasedrefresh-strategy",level:3}],g={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"go"},"Go"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/goto/stencil/clients/go"},(0,i.kt)("img",{parentName:"a",src:"https://pkg.go.dev/badge/github.com/goto/stencil/clients/go.svg",alt:"Go Reference"}))),(0,i.kt)("p",null,"Stencil go client package provides a store to lookup protobuf descriptors and options to keep the protobuf descriptors upto date."),(0,i.kt)("p",null,"It has following features"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Deserialize protobuf messages directly by specifying protobuf message name"),(0,i.kt)("li",{parentName:"ul"},"Serialize data by specifying protobuf message name"),(0,i.kt)("li",{parentName:"ul"},"Ability to refresh protobuf descriptors in specified intervals"),(0,i.kt)("li",{parentName:"ul"},"Support to download descriptors from multiple urls")),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"go 1.16")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"go get")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"go get github.com/goto/stencil/clients/go\n")),(0,i.kt)("p",null,"Then import the stencil package into your own code as mentioned below"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import stencil "github.com/goto/stencil/clients/go"\n')),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"creating-a-client"},"Creating a client"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import stencil "github.com/goto/stencil/clients/go"\n\nurl := "http://localhost:8000/v1beta1/namespaces/{test-namespace}/schemas/{schema-name}"\nclient, err := stencil.NewClient([]string{url}, stencil.Options{})\n')),(0,i.kt)("h3",{id:"get-descriptor"},"Get Descriptor"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import stencil "github.com/goto/stencil/clients/go"\n\nurl := "http://localhost:8000/v1beta1/namespaces/{test-namespace}/schemas/{schema-name}"\nclient, err := stencil.NewClient([]string{url}, stencil.Options{})\nif err != nil {\n    return\n}\ndesc, err := client.GetDescriptor("google.protobuf.DescriptorProto")\n')),(0,i.kt)("h3",{id:"parse-protobuf-message"},"Parse protobuf message."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import stencil "github.com/goto/stencil/clients/go"\n\nurl := "http://localhost:8000/v1beta1/namespaces/{test-namespace}/schemas/{schema-name}"\nclient, err := stencil.NewClient([]string{url}, stencil.Options{})\nif err != nil {\n    return\n}\ndata := []byte("")\nparsedMsg, err := client.Parse("google.protobuf.DescriptorProto", data)\n')),(0,i.kt)("h3",{id:"serialize-data"},"Serialize data."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import stencil "github.com/goto/stencil/clients/go"\n\nurl := "http://url/to/proto/descriptorset/file"\nclient, err := stencil.NewClient([]string{url}, stencil.Options{})\nif err != nil {\n    return\n}\ndata := map[string]interface{}{}\nserializedMsg, err := client.Serialize("google.protobuf.DescriptorProto", data)\n')),(0,i.kt)("h3",{id:"enable-auto-refresh-of-schemas"},"Enable auto refresh of schemas"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import stencil "github.com/goto/stencil/clients/go"\n\nurl := "http://localhost:8000/v1beta1/namespaces/{test-namespace}/schemas/{schema-name}"\n// Configured to refresh schema every 12 hours\nclient, err := stencil.NewClient([]string{url}, stencil.Options{AutoRefresh: true, RefreshInterval: time.Hours * 12})\nif err != nil {\n    return\n}\ndesc, err := client.GetDescriptor("google.protobuf.DescriptorProto")\n')),(0,i.kt)("h3",{id:"using-versionbasedrefresh-strategy"},"Using VersionBasedRefresh strategy"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'import stencil "github.com/goto/stencil/clients/go"\n\nurl := "http://localhost:8000/v1beta1/namespaces/{test-namespace}/schemas/{schema-name}"\n// Configured to refresh schema every 12 hours\nclient, err := stencil.NewClient([]string{url}, stencil.Options{AutoRefresh: true, RefreshInterval: time.Hours * 12, RefreshStrategy: stencil.VersionBasedRefresh})\nif err != nil {\n    return\n}\ndesc, err := client.GetDescriptor("google.protobuf.DescriptorProto")\n')),(0,i.kt)("p",null,"Refer to ",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/github.com/goto/stencil/clients/go"},"go documentation")," for all available methods and options."))}m.isMDXComponent=!0}}]);